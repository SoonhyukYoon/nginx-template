
#user  nobody; '설치계정' configured

# 일반적으로 고성능 서버 이거나 Nginx 전용 서버일 경우 CPU 혹은 CPU Core의 총 갯수와 동일하게 맞추는 것이 일반적이다. ('auto' 로 설정)
# CPU 확인 방법: grep processor /proc/cpuinfo | wc -l
# 단, WAS와 동일한 서버에 설치하는 경우 1/2정도 줄인다.
worker_processes 8;

# [ debug | info | notice | warn | error | crit | alert | emerg ] 
error_log  logs/error.log warn;

pid        logs/nginx.pid;


events {
    #하나의 worker_process가 받을 수 있는 클라이언트 갯수이다.
    # 총 접속 가능 클라이언트 갯수(MaxClients)는 worker_processes * worker_connections로 지정된다.
    # Reverse Proxy 상태에서는 worker_processes * worker_connections / 4 이 값은 ulimit -n의 결과값(open files)보다 작아야 한다. 보통 1024면 충분하다.
    worker_connections  1024;

    use epoll;
    multi_accept on;
}


http {
    server_tokens off;

    include       mime.types;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    sendfile        on;
    tcp_nopush   on;
    tcp_nodelay   on;

    # GZip #
    gzip on;
    gzip_min_length  1000;
    gzip_types         application/javascript application/x-javascript text/css text/javascript text/plain application/vnd.ms-fontobject application/x-font-opentype application/x-font-truetype application/x-font-ttf font/eot font/opentype font/otf image/svg+xml image/vnd.microsoft.icon;
    gzip_disable "MSIE [1-6]\.";

    # 버퍼 #
    # Proxy를 사용할 경우 버퍼의 크기가 너무 작으면 nginx는 임시 파일을 만들어 proxy에서 전달되는 내용을 저장하게 된다. 장비의 메모리 상황등을 참조하여 적당한 수준으로 늘려줘야 한다.
    client_body_buffer_size       64k;
    # 최대 업로드 사이즈를 고려해서 조정한다.
    client_max_body_size         10m;

    # timeout #
    client_body_timeout   15;
    client_header_timeout 15;
    send_timeout           10;

    # 각 웹서버 인스턴스 별 환경설정
    ## 파일 경로는 실제 서버ID를 기반으로하는 파일명으로 수정할 것
    include servers/서버ID.conf;
}
